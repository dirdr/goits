name: Go Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20, 1.21, 1.22]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: |
          go test -v -race -coverprofile=coverage.out ./test/service/unit

          go tool cover -func=coverage.out

      - name: Run go vet
        run: go vet ./test/service/unit

      - name: Run go fmt check
        run: |
          if [ "$(gofmt -s -l ./test/service/unit | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l ./test/service/unit
            exit 1
          fi
